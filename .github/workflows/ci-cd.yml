
name: NinjaApp CI/CD

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'bugfix/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-test:
    name: Build and Test NinjaApp
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Build with Gradle
      run: ./gradlew build --no-daemon

    - name: Run Unit Tests
      run: ./gradlew test --no-daemon

    - name: Run Integration Tests
      run: ./gradlew integrationTest --no-daemon
      # Ensure you have a task for integration tests in build.gradle

    - name: Check Code Style
      run: ./gradlew checkstyleMain checkstyleTest --no-daemon

    - name: Package Artifact
      run: ./gradlew assemble --no-daemon
      # Produces jars in build/libs/

  deploy:
    name: Deploy Artifact (Internal Only)
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' # Only deploy from main branch

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Deploy to Internal Repository
      run: |
        # Replace this with your company deployment script
        ./scripts/deploy_internal.sh
